{
  "swagger": "2.0",
  "info": {
    "title": "vehicle.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "VehicleService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/vehicles": {
      "get": {
        "operationId": "VehicleService_ListVehicle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListVehicleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VehicleService"
        ]
      },
      "post": {
        "operationId": "VehicleService_CreateVehicle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateVehicleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateVehicleRequest"
            }
          }
        ],
        "tags": [
          "VehicleService"
        ]
      },
      "put": {
        "operationId": "VehicleService_UpdateVehicle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateVehicleRequest"
            }
          }
        ],
        "tags": [
          "VehicleService"
        ]
      }
    },
    "/v1/vehicles/{id}": {
      "get": {
        "operationId": "VehicleService_GetVehicle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetVehicleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "VehicleService"
        ]
      },
      "delete": {
        "operationId": "VehicleService_DeleteVehicle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "VehicleService"
        ]
      }
    }
  },
  "definitions": {
    "apiCreateVehicleRequest": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "regNumber": {
          "type": "string"
        },
        "personId": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "Create vehicle"
    },
    "apiCreateVehicleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "apiGetVehicleResponse": {
      "type": "object",
      "properties": {
        "vehicle": {
          "$ref": "#/definitions/apiVehicle"
        }
      }
    },
    "apiListVehicleResponse": {
      "type": "object",
      "properties": {
        "vehicles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiVehicle"
          }
        },
        "total": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "apiUpdateVehicleRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "brand": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "regNumber": {
          "type": "string"
        },
        "personId": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "Update vehicle"
    },
    "apiVehicle": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "brand": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "regNumber": {
          "type": "string"
        },
        "personId": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "Entity"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
